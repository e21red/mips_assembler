package opcodes

type opcode string
type byterep struct {
	instructionCode int
	functionCode int
}

var CODES map[opcode]byterep

CODES["ADD"] = (0, 32)
CODES["ADDI"] = (8, 0)
CODES["ADDIU"] = (9, 0)
CODES["ADDU"] = (0, 33)
CODES["AND"] = (0, 36)
CODES["ANDI"] = (12, 0)
CODES["BEQ"] = (4, 0)
CODES["BGEZ"] = (1, 0)
//CODES["BGEZAL"] = (9, 0)
CODES["BGTZ"] = (7, 0)
CODES["BLEZ"] = (6, 0)
CODES["BLTZ"] = (1, 0)
//CODES["BLTZAL"] = (9, 0)
CODES["BNE"] = (5, 0)
CODES["DIV"] = (0, 26)
CODES["DIVU"] = (0, 27)

CODES["J"] = (2, 0)
CODES["JAL"] = (3, 0)
CODES["JR"] = (0, 8)
CODES["LB"] = (32, 0)
CODES["LB"] = (32, 0)
CODES["LB"] = (32, 0)
CODES["LB"] = (32, 0)
CODES["LB"] = (32, 0)
CODES["LB"] = (32, 0)
CODES["LB"] = (32, 0)
CODES["LB"] = (32, 0)
CODES["LB"] = (32, 0)
